
def GetFromQue(self):
        while !RxBuf.empty():
            #emb.log('before GetFromQue',BytesInQueue)
            if RxState==oenum.LOOKING_FOR_BEG:
                RxFrame=''
                RxFrame=RxFrame+chr(RxBuf.get())
                BytesInQueue=BytesInQueue-1
                if (ord(RxFrame[0])!=0x06 and 
				ord(RxFrame[0])!=0x15 and 
				ord(RxFrame[0])!=0x02 and 
				ord(RxFrame[0])!=0x03 and 
				ord(RxFrame[0])!=0x3F):
                    while RxBuf.empty()==False:# trochę niep
                        a=RxBuf.get()
                        BytesInQueue=BytesInQueue-1
                        emb.log('?',a)
                        if(a==0x06 or a==0x15 or a==0x3F or a==0x02 or a==0x03):
                            RxFrame=''
                            RxFrame=RxFrame+chr(a)
                            break #tuuuuuuuuuuuuuuuuuuuuuuu
                if (ord(RxFrame[0])==0x06 or ord(RxFrame[0])==0x15):
                    ReceiveFrame()
                    #return
                if (ord(RxFrame[0])==0x02 or ord(RxFrame[0])==0x03 or ord(RxFrame[0])==0x3F):
                    RxState=oenum.LOOKING_FOR_LEN
                    startTimer102(10)
                    
                    
            if RxState==oenum.LOOKING_FOR_LEN:
                if !RxBuf.empty():
                    RxFrame=RxFrame+chr(RxBuf.get()) #LEN or MS cought
                    BytesInQueue=BytesInQueue-1
                    if (ord(RxFrame[0])==0x3F):
                        RxState=oenum.LOOKING_FOR_BEG
                        #startTimer102(10)
                        stopTimer102()
                        ReceiveFrame()
                        #return
                    else:                   #a==0x02 or a==0x03:
                        RxState=oenum.LOOKING_FOR_CC
                        startTimer102(10)
                        
                        
            if RxState==oenum.LOOKING_FOR_CC:
                if RxBuf.empty()==False:
                    RxFrame=RxFrame+chr(RxBuf.get())# CC cought
                    BytesInQueue=BytesInQueue-1
                    if(ord(RxFrame[1])!=0):
                        RxState=oenum.DATA_COLLECTING
                        startTimer102(10)
                        Data_Collecting_i=ord(RxFrame[1])
                    else:
                        RxState=oenum.LOOKING_FOR_CHECK_1BYTE
                        startTimer102(10)
                    
            if RxState==oenum.DATA_COLLECTING:
                while Data_Collecting_i:
                    if RxBuf.empty()==False:
                        RxFrame=RxFrame+chr(RxBuf.get())# CC cought
                        BytesInQueue=BytesInQueue-1
                        Data_Collecting_i=Data_Collecting_i-1
                        startTimer102(10)
                #for i in range (0, ord(RxFrame[1])):
                #    if RxBuf.empty()==False:
                 #       RxFrame=RxFrame+chr(RxBuf.get())# CC cought
                                                   
                if((len(RxFrame)-3)==ord(RxFrame[1])):#po co
                    RxState=oenum.LOOKING_FOR_CHECK_1BYTE # chyba tylko po to
                    startTimer102(10)
            if RxState==oenum.LOOKING_FOR_CHECK_1BYTE:
                if RxBuf.empty()==False:
                    RxFrame=RxFrame+chr(RxBuf.get())# CHECK_1BYTE cought
                    BytesInQueue=BytesInQueue-1
                    RxState=oenum.LOOKING_FOR_CHECK_2BYTE
                    startTimer102(10)

            if RxState==oenum.LOOKING_FOR_CHECK_2BYTE:
                if RxBuf.empty()==False:
                    RxFrame=RxFrame+chr(RxBuf.get())# CHECK_2BYTE cought
                    BytesInQueue=BytesInQueue-1
                    CheckSum=0x10000
                    for i in range (1,3+ord(RxFrame[1])):
                        CheckSum=CheckSum+ord(RxFrame[i])
                    CheckSum=CheckSum-0x10000
                    if ((CheckSum%256==ord(RxFrame[ord(RxFrame[1])+3]))and(int(CheckSum/256)==ord(RxFrame[ord(RxFrame[1])+4]))):
                        stopTimer102()# tu też co by zdazyc przetwazac
                        ReceiveFrame()
                    else:
                        emb.log('Fr Err')#,CheckSum%256,'i',RxFrame[ord(RxFrame[1])+3])
                    RxState=oenum.LOOKING_FOR_BEG
                    stopTimer102()


RAPORT Z PROJEKTU:
efektem koncowym ma byc, celem projektu jest...
2 strony,
w czym robimy,
co zostało zrobione,
przedstawić interfejs uzytkownika,
co jeszcze trzeba zrobić,
jakie problemy widzimy,
problemy które wiemy jak rozwiazac ale wymagaja nakladu pracy,
jakie byly do tej pory najwieksze problemy,

// wysylanie adam

0x02 0x08 0x52 0x58 0x0E 0x05 0x20 0x61 0x64 0x61 0x6D 0x78 0x02 
0x02 0x08 0x52 0x58 0x0F 0x04 0xE8 0x61 0x64 0x61 0x6D 0x40 0x03 
0x02 0x08 0x52 0x58 0x10 0x01 0xAB 0x61 0x64 0x61 0x6D 0x01 0x03 
0x02 0x08 0x52 0x58 0x12 0x03 0xD2 0x61 0x64 0x61 0x6D 0x2C 0x03 
0x02 0x08 0x52 0x58 0x11 0x02 0x6F 0x61 0x64 0x61 0x6D 0xC7 0x02 
0x3F 0x09 
0x06 
0x02 0x00 0x09 0x09 0x00 
0x02 0x0C 0x26 0x58 0x12 0x00 0xE9 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0x8F 0x05 
0x02 0x0C 0x26 0x58 0x0E 0x05 0x26 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0xCD 0x04 
0x02 0x0C 0x26 0x58 0x13 0x02 0xFA 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0xA3 0x05 
0x02 0x08 0x26 0x58 0x11 0x01 0xF4 0x61 0x64 0x61 0x6D 0x1F 0x03 
0x02 0x08 0x26 0x58 0x10 0x02 0xA5 0x61 0x64 0x61 0x6D 0xD0 0x02 
0x02 0x08 0x26 0x58 0x12 0x00 0xB8 0x61 0x64 0x61 0x6D 0xE3 0x02 
0x02 0x08 0x26 0x58 0x12 0x04 0x0E 0x61 0x64 0x61 0x6D 0x3D 0x02 
0x02 0x08 0x26 0x58 0x13 0x00 0x04 0x61 0x64 0x61 0x6D 0x30 0x02 
0x02 0x08 0x26 0x58 0x11 0x01 0x52 0x61 0x64 0x61 0x6D 0x7D 0x02 
0x02 0x08 0x26 0x58 0x13 0x05 0xF6 0x61 0x64 0x61 0x6D 0x27 0x03 
0x02 0x08 0x26 0x58 0x0F 0x01 0x87 0x61 0x64 0x61 0x6D 0xB0 0x02 
0x02 0x08 0x26 0x58 0x11 0x04 0x4F 0x61 0x64 0x61 0x6D 0x7D 0x02 
0x02 0x08 0x26 0x58 0x0E 0x02 0x3C 0x61 0x64 0x61 0x6D 0x65 0x02 
0x02 0x08 0x26 0x58 0x11 0x01 0x73 0x61 0x64 0x61 0x6D 0x9E 0x02 
0x3F 0x01 
0x06 
0x02 0x00 0x09 0x09 0x00 
0x02 0x08 0x52 0x58 0x11 0x05 0xAA 0x61 0x64 0x61 0x6D 0x05 0x03 
0x02 0x08 0x52 0x58 0x12 0x04 0x21 0x61 0x64 0x61 0x6D 0x7C 0x02 
0x02 0x08 0x52 0x58 0x11 0x04 0xB3 0x61 0x64 0x61 0x6D 0x0D 0x03 
0x02 0x08 0x52 0x58 0x0D 0x02 0x91 0x61 0x64 0x61 0x6D 0xE5 0x02 
0x02 0x08 0x52 0x58 0x12 0x00 0x81 0x61 0x64 0x61 0x6D 0xD8 0x02 
0x02 0x08 0x52 0x58 0x10 0x05 0xB5 0x61 0x64 0x61 0x6D 0x0F 0x03 
0x02 0x08 0x52 0x58 0x13 0x00 0xA9 0x61 0x64 0x61 0x6D 0x01 0x03 
0x3F 0x09 
0x06 
0x02 0x00 0x09 0x09 0x00 
0x02 0x0C 0x26 0x58 0x0D 0x02 0x0E 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0xB1 0x04 
0x02 0x0C 0x26 0x58 0x12 0x03 0x61 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0x0A 0x05 
0x02 0x0C 0x26 0x58 0x11 0x01 0x49 0x61 0x64 0x61 0x6D 0x85 0x6B 0xE5 0xA2 0xEF 0x04 

/*
* 
*	DOBRE RAMKI
*
*/

0x02 0x0A 0x52 0x18 0x21 0x01 0x75 0x4D 0x69 0x63 0x68 0x61 0x6C 0x59 0x03							// michal dl(src)-dl(dst), dl data request
0x02 0x0E 0x26 0x18 0x1A 0x01 0x6D 0x4D 0x69 0x63 0x68 0x61 0x6C 0xCD 0x18 0x93 0xC1 0x5B 0x05		// dl-phy, dl data req
0x02 0x0A 0x26 0x18 0x1B 0x03 0x43 0x4D 0x69 0x63 0x68 0x61 0x6C 0xF7 0x02							// phy-phy, phy data req
0x02 0x0E 0x26 0x18 0x1B 0x05 0x47 0x4D 0x69 0x63 0x68 0x61 0x6C 0xCD 0x18 0x93 0xC1 0x3A 0x05		// phy-phy, dl data req
0x02 0x0A 0x52 0x18 0x1A 0x05 0x4D 0x4D 0x69 0x63 0x68 0x61 0x6C 0x2E 0x03							// phy-dl, dl data request
																								nic // phy-dl, phy data request

																							


Podsumowanie:
	Opisac co bym zmienil, czy dobrze zrobilem, Application notes